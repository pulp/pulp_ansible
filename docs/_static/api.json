{
    "openapi": "3.0.3",
    "info": {
        "title": "Pulp 3 API",
        "version": "v3",
        "description": "Fetch, Upload, Organize, and Distribute Software Packages",
        "contact": {
            "name": "Pulp Team",
            "email": "pulp-list@redhat.com",
            "url": "https://pulpproject.org"
        },
        "license": {
            "name": "GPLv2+",
            "url": "https://raw.githubusercontent.com/pulp/pulpcore/master/LICENSE"
        },
        "x-logo": {
            "url": "https://pulp.plan.io/attachments/download/517478/pulp_logo_word_rectangle.svg"
        }
    },
    "paths": {
        "/ansible/collections/": {
            "post": {
                "operationId": "upload_collection",
                "description": "Create an artifact and trigger an asynchronous task to create Collection content from it.",
                "summary": "Upload a collection",
                "tags": [
                    "Ansible: Collections"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionOneShot"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionOneShot"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/ansible/collections/": {
            "get": {
                "operationId": "ansible_collections_list",
                "description": "Viewset for Ansible Collections.",
                "summary": "List collections",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "namespace",
                        "required": false,
                        "in": "query",
                        "description": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Ansible: Collections"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.CollectionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_href}": {
            "get": {
                "operationId": "galaxy_collection_detail_get",
                "description": "Get the detail view of a Collection.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Galaxy: Detail"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GalaxyCollectionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/ansible/collection_versions/": {
            "get": {
                "operationId": "content_ansible_collection_versions_list",
                "description": "ViewSet for Ansible Collection.",
                "summary": "List collection versions",
                "parameters": [
                    {
                        "name": "deprecated",
                        "required": false,
                        "in": "query",
                        "description": "deprecated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_highest",
                        "required": false,
                        "in": "query",
                        "description": "is_highest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "namespace",
                        "required": false,
                        "in": "query",
                        "description": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "q",
                        "required": false,
                        "in": "query",
                        "description": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "repository_version",
                        "required": false,
                        "in": "query",
                        "description": "repository_version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "repository_version_added",
                        "required": false,
                        "in": "query",
                        "description": "repository_version_added",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "repository_version_removed",
                        "required": false,
                        "in": "query",
                        "description": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tags",
                        "required": false,
                        "in": "query",
                        "description": "tags",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "required": false,
                        "in": "query",
                        "description": "version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Collection_Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.CollectionVersionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_ansible_collection_versions_create",
                "description": "ViewSet for Ansible Collection.",
                "summary": "Create a collection version",
                "tags": [
                    "Content: Collection_Versions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionVersion"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionVersion"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionVersion"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.CollectionVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_version_href}": {
            "get": {
                "operationId": "content_ansible_collection_versions_read",
                "description": "ViewSet for Ansible Collection.",
                "summary": "Inspect a collection version",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Collection_Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.CollectionVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/content/ansible/roles/": {
            "get": {
                "operationId": "content_ansible_roles_list",
                "description": "ViewSet for Role.",
                "summary": "List roles",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "namespace",
                        "required": false,
                        "in": "query",
                        "description": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "repository_version",
                        "required": false,
                        "in": "query",
                        "description": "repository_version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "repository_version_added",
                        "required": false,
                        "in": "query",
                        "description": "repository_version_added",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "repository_version_removed",
                        "required": false,
                        "in": "query",
                        "description": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "required": false,
                        "in": "query",
                        "description": "version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Roles"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.RoleResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "content_ansible_roles_create",
                "description": "ViewSet for Role.",
                "summary": "Create a role",
                "tags": [
                    "Content: Roles"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.Role"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.Role"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.Role"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.RoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_role_href}": {
            "get": {
                "operationId": "content_ansible_roles_read",
                "description": "ViewSet for Role.",
                "summary": "Inspect a role",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Content: Roles"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.RoleResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/distributions/ansible/ansible/": {
            "get": {
                "operationId": "distributions_ansible_ansible_list",
                "description": "ViewSet for Ansible Distributions.",
                "summary": "List ansible distributions",
                "parameters": [
                    {
                        "name": "base_path",
                        "required": false,
                        "in": "query",
                        "description": "base_path",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_path__contains",
                        "required": false,
                        "in": "query",
                        "description": "base_path__contains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_path__icontains",
                        "required": false,
                        "in": "query",
                        "description": "base_path__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "base_path__in",
                        "required": false,
                        "in": "query",
                        "description": "base_path__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Ansible"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.AnsibleDistributionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "distributions_ansible_ansible_create",
                "description": "Trigger an asynchronous create task",
                "summary": "Create an ansible distribution",
                "tags": [
                    "Distributions: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_distribution_href}": {
            "get": {
                "operationId": "distributions_ansible_ansible_read",
                "description": "ViewSet for Ansible Distributions.",
                "summary": "Inspect an ansible distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Distributions: Ansible"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.AnsibleDistributionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "distributions_ansible_ansible_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update an ansible distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "distributions_ansible_ansible_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update an ansible distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.AnsibleDistribution"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.AnsibleDistribution"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.AnsibleDistribution"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "distributions_ansible_ansible_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete an ansible distribution",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_distribution_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Distributions: Ansible"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/pulp_ansible/tags/": {
            "get": {
                "operationId": "pulp_ansible_tags_list",
                "description": "ViewSet for Tag models.",
                "summary": "List tags",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Tags"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedTagResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/remotes/ansible/collection/": {
            "get": {
                "operationId": "remotes_ansible_collection_list",
                "description": "ViewSet for Collection Remotes.",
                "summary": "List collection remotes",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__gt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__gte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__lt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__lte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__range",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Collection"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.CollectionRemoteResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "remotes_ansible_collection_create",
                "description": "ViewSet for Collection Remotes.",
                "summary": "Create a collection remote",
                "tags": [
                    "Remotes: Collection"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.CollectionRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_remote_href}": {
            "get": {
                "operationId": "remotes_ansible_collection_read",
                "description": "ViewSet for Collection Remotes.",
                "summary": "Inspect a collection remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Collection"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.CollectionRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "remotes_ansible_collection_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a collection remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Collection"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.CollectionRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "remotes_ansible_collection_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a collection remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Collection"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.CollectionRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.CollectionRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.CollectionRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "remotes_ansible_collection_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a collection remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Collection"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/remotes/ansible/role/": {
            "get": {
                "operationId": "remotes_ansible_role_list",
                "description": "ViewSet for Role Remotes.",
                "summary": "List role remotes",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__gt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__gte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__lt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__lte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_last_updated__range",
                        "required": false,
                        "in": "query",
                        "description": "pulp_last_updated__range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Role"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.RoleRemoteResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "remotes_ansible_role_create",
                "description": "ViewSet for Role Remotes.",
                "summary": "Create a role remote",
                "tags": [
                    "Remotes: Role"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.RoleRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.RoleRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.RoleRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.RoleRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_role_remote_href}": {
            "get": {
                "operationId": "remotes_ansible_role_read",
                "description": "ViewSet for Role Remotes.",
                "summary": "Inspect a role remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Remotes: Role"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.RoleRemoteResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "remotes_ansible_role_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update a role remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Role"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.RoleRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.RoleRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.RoleRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "remotes_ansible_role_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update a role remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Role"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.RoleRemote"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.RoleRemote"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.RoleRemote"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "remotes_ansible_role_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete a role remote",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_remote_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Remotes: Role"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp/api/v3/repositories/ansible/ansible/": {
            "get": {
                "operationId": "repositories_ansible_ansible_list",
                "description": "ViewSet for Ansible Repositories.",
                "summary": "List ansible repositorys",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name__in",
                        "required": false,
                        "in": "query",
                        "description": "name__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Paginatedansible.AnsibleRepositoryResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "repositories_ansible_ansible_create",
                "description": "ViewSet for Ansible Repositories.",
                "summary": "Create an ansible repository",
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.AnsibleRepositoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}": {
            "get": {
                "operationId": "repositories_ansible_ansible_read",
                "description": "ViewSet for Ansible Repositories.",
                "summary": "Inspect an ansible repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ansible.AnsibleRepositoryResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "repositories_ansible_ansible_update",
                "description": "Trigger an asynchronous update task",
                "summary": "Update an ansible repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ansible.AnsibleRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "repositories_ansible_ansible_partial_update",
                "description": "Trigger an asynchronous partial update task",
                "summary": "Update an ansible repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.AnsibleRepository"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.AnsibleRepository"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Patchedansible.AnsibleRepository"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "repositories_ansible_ansible_delete",
                "description": "Trigger an asynchronous delete task",
                "summary": "Delete an ansible repository",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}modify/": {
            "post": {
                "operationId": "repositories_ansible_ansible_modify",
                "description": "Trigger an asynchronous task to create a new repository version.",
                "summary": "Modify Repository Content",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryAddRemoveContent"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}sync/": {
            "post": {
                "operationId": "repositories_ansible_ansible_sync",
                "description": "Trigger an asynchronous task to sync Ansible content.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositorySyncURL"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositorySyncURL"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositorySyncURL"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_href}versions/": {
            "get": {
                "operationId": "repositories_ansible_ansible_versions_list",
                "description": "AnsibleRepositoryVersion represents a single file repository version.",
                "summary": "List repository versions",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "content",
                        "required": false,
                        "in": "query",
                        "description": "content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "content__in",
                        "required": false,
                        "in": "query",
                        "description": "content__in",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "number",
                        "required": false,
                        "in": "query",
                        "description": "number",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__gt",
                        "required": false,
                        "in": "query",
                        "description": "number__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__gte",
                        "required": false,
                        "in": "query",
                        "description": "number__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__lt",
                        "required": false,
                        "in": "query",
                        "description": "number__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__lte",
                        "required": false,
                        "in": "query",
                        "description": "number__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "number__range",
                        "required": false,
                        "in": "query",
                        "description": "number__range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__gt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__gt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__gte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__gte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__lt",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__lt",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__lte",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__lte",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pulp_created__range",
                        "required": false,
                        "in": "query",
                        "description": "pulp_created__range",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Ansible Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedRepositoryVersionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_version_href}": {
            "get": {
                "operationId": "repositories_ansible_ansible_versions_read",
                "description": "AnsibleRepositoryVersion represents a single file repository version.",
                "summary": "Inspect a repository version",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Repositories: Ansible Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RepositoryVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "repositories_ansible_ansible_versions_delete",
                "description": "Trigger an asynchronous task to delete a repositroy version.",
                "summary": "Delete a repository version",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible Versions"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_ansible_repository_version_href}repair/": {
            "post": {
                "operationId": "repositories_ansible_ansible_versions_repair",
                "description": "Trigger an asynchronous task to repair a repositroy version.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_ansible_repository_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Repositories: Ansible Versions"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryVersion"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryVersion"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/RepositoryVersion"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_get",
                "description": "Return a response to the \"GET\" action.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Api"
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "{ansible_role_href}api/v1/roles/": {
            "get": {
                "operationId": "api_v1_roles_get",
                "description": "APIView for Roles.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Roles"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGalaxyRoleResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_role_href}versions/": {
            "get": {
                "operationId": "versions_get",
                "description": "APIView for Role Versions.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_role_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Versions"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGalaxyRoleVersionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_import_href}": {
            "get": {
                "operationId": "collection_import_read",
                "description": "Returns a CollectionImport object.",
                "summary": "Inspect a collection import",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_import_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "since",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Filter messages since a given timestamp"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Collection: Import"
                ],
                "security": [
                    {
                        "cookieAuth": []
                    },
                    {
                        "basicAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionImportDetailResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_href}api/v2/collections/": {
            "get": {
                "operationId": "api_v2_collections_get",
                "description": "View for Collection models.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Api: Collections"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGalaxyCollectionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_v2_collections_post",
                "description": "Queues a task that creates a new Collection from an uploaded artifact.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Api: Collections"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GalaxyCollection"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/GalaxyCollection"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/GalaxyCollection"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GalaxyCollectionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "{ansible_collection_version_href}versions/": {
            "get": {
                "operationId": "versions_get",
                "description": "APIView for Collections by namespace/name.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "ansible_collection_version_href",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Versions"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedGalaxyCollectionVersionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v2/collections/{namespace}/{name}/versions/{version}/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v2_collections_versions_get",
                "description": "Return a response to the \"GET\" action.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Galaxy Api V2 Versions"
                ],
                "responses": {
                    "200": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/artifacts/collections/": {
            "post": {
                "operationId": "pulp_ansible_galaxy_api_v3_artifacts_collections_create",
                "description": "Create an artifact and trigger an asynchronous task to create Collection content from it.",
                "summary": "Upload a collection",
                "parameters": [
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Galaxy Api V3 Collections"
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionOneShot"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CollectionOneShot"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AsyncOperationResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/collections/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_collections_list",
                "description": "ViewSet for Collections.",
                "parameters": [
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Galaxy Api Collections"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/collections/{namespace}/{name}/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_collections_read",
                "description": "ViewSet for Collections.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Galaxy Api Collections"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "pulp_ansible_galaxy_api_v3_collections_update",
                "description": "Update a Collection object.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Galaxy Api Collections"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Collection"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Collection"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Collection"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/collections/{namespace}/{name}/versions/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_collections_versions_list",
                "description": "Returns paginated CollectionVersions list.",
                "parameters": [
                    {
                        "name": "deprecated",
                        "required": false,
                        "in": "query",
                        "description": "deprecated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "is_highest",
                        "required": false,
                        "in": "query",
                        "description": "is_highest",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "name",
                        "required": false,
                        "in": "query",
                        "description": "name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "namespace",
                        "required": false,
                        "in": "query",
                        "description": "namespace",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "offset",
                        "required": false,
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "name": "q",
                        "required": false,
                        "in": "query",
                        "description": "q",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "repository_version",
                        "required": false,
                        "in": "query",
                        "description": "repository_version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "repository_version_added",
                        "required": false,
                        "in": "query",
                        "description": "repository_version_added",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "repository_version_removed",
                        "required": false,
                        "in": "query",
                        "description": "repository_version_removed",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tags",
                        "required": false,
                        "in": "query",
                        "description": "tags",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "required": false,
                        "in": "query",
                        "description": "version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Galaxy Api V3 Versions"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCollectionVersionResponseList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/collections/{namespace}/{name}/versions/{version}/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_collections_versions_read",
                "description": "Returns a CollectionVersion object.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Galaxy Api V3 Versions"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/pulp_ansible/galaxy/{path}/api/v3/collections/{namespace}/{name}/versions/{version}/docs-blob/": {
            "get": {
                "operationId": "pulp_ansible_galaxy_api_v3_collections_versions_docs_blob_read",
                "description": "Returns a CollectionVersion object.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "name",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "namespace",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "version",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to include in the response."
                    },
                    {
                        "in": "query",
                        "name": "exclude_fields",
                        "schema": {
                            "type": "string"
                        },
                        "description": "A list of fields to exclude from the response."
                    }
                ],
                "tags": [
                    "Pulp_Ansible: Galaxy Api V3 Collections Docs-Blob"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectionVersionDocsResponse"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AsyncOperationResponse": {
                "type": "object",
                "description": "Serializer for asynchronous operations.",
                "properties": {
                    "task": {
                        "type": "string",
                        "format": "uri",
                        "description": "The href of the task."
                    }
                },
                "required": [
                    "task"
                ]
            },
            "Collection": {
                "type": "object",
                "description": "A serializer for a Collection.",
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deprecated": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "created_at",
                    "deprecated",
                    "updated_at"
                ]
            },
            "CollectionImportDetailResponse": {
                "type": "object",
                "description": "A serializer for a CollectionImport detail view.",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "state": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "started_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "finished_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "error": {
                        "type": "object"
                    },
                    "messages": {
                        "type": "object"
                    }
                },
                "required": [
                    "created_at",
                    "error",
                    "finished_at",
                    "id",
                    "messages",
                    "started_at",
                    "state",
                    "updated_at"
                ]
            },
            "CollectionMetadataResponse": {
                "type": "object",
                "description": "A serializer for a CollectionVersion metadata.",
                "properties": {
                    "authors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "contents": {
                        "type": "object",
                        "readOnly": true
                    },
                    "dependencies": {
                        "type": "object",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true
                    },
                    "documentation": {
                        "type": "string",
                        "readOnly": true
                    },
                    "homepage": {
                        "type": "string",
                        "readOnly": true
                    },
                    "issues": {
                        "type": "string",
                        "readOnly": true
                    },
                    "license": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "repository": {
                        "type": "string",
                        "readOnly": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "tags"
                ]
            },
            "CollectionNamespaceResponse": {
                "type": "object",
                "description": "A serializer for a Collection Version namespace field.",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "CollectionOneShot": {
                "type": "object",
                "description": "A serializer for the Collection One Shot Upload API.",
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "description": "The Collection tarball."
                    },
                    "sha256": {
                        "type": "string",
                        "description": "An optional sha256 checksum of the uploaded file."
                    },
                    "expected_namespace": {
                        "type": "string",
                        "description": "The expected 'namespace' of the Collection to be verified against the metadata during import."
                    },
                    "expected_name": {
                        "type": "string",
                        "description": "The expected 'name' of the Collection to be verified against the metadata during import."
                    },
                    "expected_version": {
                        "type": "string",
                        "description": "The expected version of the Collection to be verified against the metadata during import."
                    }
                },
                "required": [
                    "file"
                ]
            },
            "CollectionRefResponse": {
                "type": "object",
                "description": "A serializer for a Collection reference.",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "href": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "CollectionResponse": {
                "type": "object",
                "description": "A serializer for a Collection.",
                "properties": {
                    "href": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "namespace": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "deprecated": {
                        "type": "boolean"
                    },
                    "versions_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "highest_version": {
                        "type": "object",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "deprecated",
                    "updated_at"
                ]
            },
            "CollectionVersionDocsResponse": {
                "type": "object",
                "description": "A serializer to display the docs_blob of a CollectionVersion.",
                "properties": {
                    "docs_blob": {
                        "type": "object"
                    }
                },
                "required": [
                    "docs_blob"
                ]
            },
            "CollectionVersionResponse": {
                "type": "object",
                "description": "A serializer for a CollectionVersion.",
                "properties": {
                    "version": {
                        "type": "string",
                        "readOnly": true
                    },
                    "href": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "artifact": {
                        "type": "string",
                        "readOnly": true
                    },
                    "collection": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CollectionRefResponse"
                            }
                        ],
                        "readOnly": true
                    },
                    "download_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "namespace": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CollectionNamespaceResponse"
                            }
                        ],
                        "readOnly": true
                    },
                    "metadata": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CollectionMetadataResponse"
                            }
                        ],
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "updated_at"
                ]
            },
            "ContentSummary": {
                "type": "object",
                "description": "Serializer for the RepositoryVersion content summary",
                "properties": {
                    "added": {
                        "type": "object"
                    },
                    "removed": {
                        "type": "object"
                    },
                    "present": {
                        "type": "object"
                    }
                },
                "required": [
                    "added",
                    "present",
                    "removed"
                ]
            },
            "ContentSummaryResponse": {
                "type": "object",
                "description": "Serializer for the RepositoryVersion content summary",
                "properties": {
                    "added": {
                        "type": "object"
                    },
                    "removed": {
                        "type": "object"
                    },
                    "present": {
                        "type": "object"
                    }
                },
                "required": [
                    "added",
                    "present",
                    "removed"
                ]
            },
            "GalaxyCollection": {
                "type": "object",
                "description": "A serializer for a Collection.",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "created",
                    "id",
                    "modified",
                    "name"
                ]
            },
            "GalaxyCollectionResponse": {
                "type": "object",
                "description": "A serializer for a Collection.",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "object",
                        "readOnly": true
                    },
                    "href": {
                        "type": "string",
                        "readOnly": true
                    },
                    "versions_url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "modified": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "latest_version": {
                        "type": "object",
                        "readOnly": true
                    }
                },
                "required": [
                    "created",
                    "id",
                    "modified",
                    "name"
                ]
            },
            "GalaxyCollectionVersionResponse": {
                "type": "object",
                "description": "A serializer for a CollectionVersion.",
                "properties": {
                    "version": {
                        "type": "string"
                    },
                    "href": {
                        "type": "string",
                        "readOnly": true
                    },
                    "namespace": {
                        "type": "object",
                        "readOnly": true
                    },
                    "collection": {
                        "type": "object",
                        "readOnly": true
                    },
                    "artifact": {
                        "type": "object",
                        "readOnly": true
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/CollectionMetadataResponse"
                    }
                },
                "required": [
                    "metadata",
                    "version"
                ]
            },
            "GalaxyRoleResponse": {
                "type": "object",
                "description": "A serializer for Galaxy's representation of Roles.",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "namespace"
                ]
            },
            "GalaxyRoleVersionResponse": {
                "type": "object",
                "description": "A serializer for Galaxy's representation of Role versions.",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "name"
                ]
            },
            "PaginatedCollectionResponseList": {
                "type": "object",
                "properties": {
                    "meta": {
                        "count": {
                            "type": "integer",
                            "example": 123
                        }
                    },
                    "links": {
                        "first": {
                            "type": "string",
                            "nullable": true
                        },
                        "previous": {
                            "type": "string",
                            "nullable": true
                        },
                        "next": {
                            "type": "string",
                            "nullable": true
                        },
                        "last": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CollectionResponse"
                        }
                    }
                }
            },
            "PaginatedCollectionVersionResponseList": {
                "type": "object",
                "properties": {
                    "meta": {
                        "count": {
                            "type": "integer",
                            "example": 123
                        }
                    },
                    "links": {
                        "first": {
                            "type": "string",
                            "nullable": true
                        },
                        "previous": {
                            "type": "string",
                            "nullable": true
                        },
                        "next": {
                            "type": "string",
                            "nullable": true
                        },
                        "last": {
                            "type": "string",
                            "nullable": true
                        }
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CollectionVersionResponse"
                        }
                    }
                }
            },
            "PaginatedGalaxyCollectionResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GalaxyCollectionResponse"
                        }
                    }
                }
            },
            "PaginatedGalaxyCollectionVersionResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GalaxyCollectionVersionResponse"
                        }
                    }
                }
            },
            "PaginatedGalaxyRoleResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GalaxyRoleResponse"
                        }
                    }
                }
            },
            "PaginatedGalaxyRoleVersionResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GalaxyRoleVersionResponse"
                        }
                    }
                }
            },
            "PaginatedRepositoryVersionResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RepositoryVersionResponse"
                        }
                    }
                }
            },
            "PaginatedTagResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TagResponse"
                        }
                    }
                }
            },
            "Paginatedansible.AnsibleDistributionResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.AnsibleDistributionResponse"
                        }
                    }
                }
            },
            "Paginatedansible.AnsibleRepositoryResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.AnsibleRepositoryResponse"
                        }
                    }
                }
            },
            "Paginatedansible.CollectionRemoteResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.CollectionRemoteResponse"
                        }
                    }
                }
            },
            "Paginatedansible.CollectionResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.CollectionResponse"
                        }
                    }
                }
            },
            "Paginatedansible.CollectionVersionResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.CollectionVersionResponse"
                        }
                    }
                }
            },
            "Paginatedansible.RoleRemoteResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.RoleRemoteResponse"
                        }
                    }
                }
            },
            "Paginatedansible.RoleResponseList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=400&limit=100"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?offset=200&limit=100"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.RoleResponse"
                        }
                    }
                }
            },
            "Patchedansible.AnsibleDistribution": {
                "type": "object",
                "description": "Serializer for Ansible Distributions.",
                "properties": {
                    "base_path": {
                        "type": "string",
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "RepositoryVersion to be served"
                    }
                }
            },
            "Patchedansible.AnsibleRepository": {
                "type": "object",
                "description": "Serializer for Ansible Repositories.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    }
                }
            },
            "Patchedansible.CollectionRemote": {
                "type": "object",
                "description": "A serializer for Collection Remotes.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://user:password@host:port"
                    },
                    "username": {
                        "type": "string",
                        "nullable": true,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "nullable": true,
                        "description": "The password to be used for authentication when syncing."
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Total number of simultaneous connections."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyEnum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content."
                    },
                    "requirements_file": {
                        "type": "string",
                        "nullable": true,
                        "description": "The string version of Collection requirements yaml."
                    },
                    "auth_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The URL to receive a session token from, e.g. used with Automation Hub.",
                        "maxLength": 255
                    },
                    "token": {
                        "type": "string",
                        "nullable": true,
                        "description": "The token key to use for authentication. See https://docs.ansible.com/ansible/latest/user_guide/collections_using.html#configuring-the-ansible-galaxy-clientfor more details",
                        "maxLength": 2000
                    }
                }
            },
            "Patchedansible.RoleRemote": {
                "type": "object",
                "description": "A serializer for Ansible Remotes.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://user:password@host:port"
                    },
                    "username": {
                        "type": "string",
                        "nullable": true,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "nullable": true,
                        "description": "The password to be used for authentication when syncing."
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Total number of simultaneous connections."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyEnum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content."
                    }
                }
            },
            "PolicyEnum": {
                "enum": [
                    "immediate",
                    "When syncing, download all metadata and content now."
                ],
                "type": "string"
            },
            "RepositoryAddRemoveContent": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "add_content_units": {
                        "type": "array",
                        "items": {},
                        "description": "A list of content units to add to a new repository version. This content is added after remove_content_units are removed."
                    },
                    "remove_content_units": {
                        "type": "array",
                        "items": {},
                        "description": "A list of content units to remove from the latest repository version. You may also specify '*' as an entry to remove all content. This content is removed before add_content_units are added."
                    },
                    "base_version": {
                        "type": "string",
                        "format": "uri",
                        "description": "A repository version whose content will be used as the initial set of content for the new repository version"
                    }
                }
            },
            "RepositorySyncURL": {
                "type": "object",
                "description": "A mixin for validating unknown serializers' fields.",
                "properties": {
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "description": "A remote to sync from. This will override a remote set on repository."
                    },
                    "mirror": {
                        "type": "boolean",
                        "default": false,
                        "description": "If ``True``, synchronization will remove all content that is not present in the remote repository. If ``False``, sync will be additive only."
                    }
                }
            },
            "RepositoryVersion": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "base_version": {
                        "type": "string",
                        "format": "uri",
                        "description": "A repository version whose content was used as the initial set of content for this repository version"
                    }
                }
            },
            "RepositoryVersionResponse": {
                "type": "object",
                "description": "Base serializer for use with :class:`pulpcore.app.models.Model`\n\nThis ensures that all Serializers provide values for the 'pulp_href` field.\n\nThe class provides a default for the ``ref_name`` attribute in the\nModelSerializers's ``Meta`` class. This ensures that the OpenAPI definitions\nof plugins are namespaced properly.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "number": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "base_version": {
                        "type": "string",
                        "format": "uri",
                        "description": "A repository version whose content was used as the initial set of content for this repository version"
                    },
                    "content_summary": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ContentSummaryResponse"
                            }
                        ],
                        "readOnly": true,
                        "description": "Various count summaries of the content in the version and the HREF to view them."
                    }
                }
            },
            "TagResponse": {
                "type": "object",
                "description": "A serializer for the Tag model.",
                "properties": {
                    "name": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "ansible.AnsibleDistribution": {
                "type": "object",
                "description": "Serializer for Ansible Distributions.",
                "properties": {
                    "base_path": {
                        "type": "string",
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "RepositoryVersion to be served"
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "ansible.AnsibleDistributionResponse": {
                "type": "object",
                "description": "Serializer for Ansible Distributions.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "base_path": {
                        "type": "string",
                        "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")"
                    },
                    "content_guard": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "An optional content-guard."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name. Ex, `rawhide` and `stable`."
                    },
                    "repository": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "The latest RepositoryVersion for this Repository will be served."
                    },
                    "repository_version": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true,
                        "description": "RepositoryVersion to be served"
                    },
                    "client_url": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The URL of a Collection content source."
                    }
                },
                "required": [
                    "base_path",
                    "name"
                ]
            },
            "ansible.AnsibleRepository": {
                "type": "object",
                "description": "Serializer for Ansible Repositories.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ansible.AnsibleRepositoryResponse": {
                "type": "object",
                "description": "Serializer for Ansible Repositories.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "versions_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "latest_version_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this repository."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "An optional description."
                    },
                    "remote": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ansible.CollectionRemote": {
                "type": "object",
                "description": "A serializer for Collection Remotes.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://user:password@host:port"
                    },
                    "username": {
                        "type": "string",
                        "nullable": true,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "nullable": true,
                        "description": "The password to be used for authentication when syncing."
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Total number of simultaneous connections."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyEnum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content."
                    },
                    "requirements_file": {
                        "type": "string",
                        "nullable": true,
                        "description": "The string version of Collection requirements yaml."
                    },
                    "auth_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The URL to receive a session token from, e.g. used with Automation Hub.",
                        "maxLength": 255
                    },
                    "token": {
                        "type": "string",
                        "nullable": true,
                        "description": "The token key to use for authentication. See https://docs.ansible.com/ansible/latest/user_guide/collections_using.html#configuring-the-ansible-galaxy-clientfor more details",
                        "maxLength": 2000
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "ansible.CollectionRemoteResponse": {
                "type": "object",
                "description": "A serializer for Collection Remotes.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://user:password@host:port"
                    },
                    "username": {
                        "type": "string",
                        "nullable": true,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "nullable": true,
                        "description": "The password to be used for authentication when syncing."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the most recent update of the remote."
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Total number of simultaneous connections."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyEnum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content."
                    },
                    "requirements_file": {
                        "type": "string",
                        "nullable": true,
                        "description": "The string version of Collection requirements yaml."
                    },
                    "auth_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The URL to receive a session token from, e.g. used with Automation Hub.",
                        "maxLength": 255
                    },
                    "token": {
                        "type": "string",
                        "nullable": true,
                        "description": "The token key to use for authentication. See https://docs.ansible.com/ansible/latest/user_guide/collections_using.html#configuring-the-ansible-galaxy-clientfor more details",
                        "maxLength": 2000
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "ansible.CollectionResponse": {
                "type": "object",
                "description": "A serializer for Ansible Collections.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the Collection."
                    },
                    "namespace": {
                        "type": "string",
                        "description": "The namespace of the Collection."
                    }
                },
                "required": [
                    "name",
                    "namespace"
                ]
            },
            "ansible.CollectionVersion": {
                "type": "object",
                "description": "A serializer for CollectionVersion Content.",
                "properties": {
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "A collection identifier."
                    },
                    "authors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of the CollectionVersion content's authors."
                    },
                    "contents": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "A JSON field with data about the contents."
                    },
                    "dependencies": {
                        "type": "object",
                        "description": "A dict declaring Collections that this collection requires to be installed for it to be usable."
                    },
                    "description": {
                        "type": "string",
                        "description": "A short summary description of the collection."
                    },
                    "docs_blob": {
                        "type": "object",
                        "description": "A JSON field holding the various documentation blobs in the collection."
                    },
                    "documentation": {
                        "type": "string",
                        "description": "The URL to any online docs.",
                        "maxLength": 2000
                    },
                    "homepage": {
                        "type": "string",
                        "description": "The URL to the homepage of the collection/project.",
                        "maxLength": 2000
                    },
                    "issues": {
                        "type": "string",
                        "description": "The URL to the collection issue tracker.",
                        "maxLength": 2000
                    },
                    "license": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of licenses for content inside of a collection."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the collection.",
                        "maxLength": 32
                    },
                    "namespace": {
                        "type": "string",
                        "description": "The namespace of the collection.",
                        "maxLength": 32
                    },
                    "repository": {
                        "type": "string",
                        "description": "The URL of the originating SCM repository.",
                        "maxLength": 2000
                    },
                    "version": {
                        "type": "string",
                        "description": "The version of the collection.",
                        "maxLength": 32
                    }
                },
                "required": [
                    "artifact",
                    "authors",
                    "contents",
                    "dependencies",
                    "description",
                    "docs_blob",
                    "documentation",
                    "homepage",
                    "id",
                    "issues",
                    "license",
                    "name",
                    "namespace",
                    "repository",
                    "version"
                ]
            },
            "ansible.CollectionVersionResponse": {
                "type": "object",
                "description": "A serializer for CollectionVersion Content.",
                "properties": {
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "md5": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The MD5 checksum if available."
                    },
                    "sha1": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-1 checksum if available."
                    },
                    "sha224": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-224 checksum if available."
                    },
                    "sha256": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-256 checksum if available."
                    },
                    "sha384": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-384 checksum if available."
                    },
                    "sha512": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The SHA-512 checksum if available."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "A collection identifier."
                    },
                    "authors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of the CollectionVersion content's authors."
                    },
                    "contents": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        },
                        "description": "A JSON field with data about the contents."
                    },
                    "dependencies": {
                        "type": "object",
                        "description": "A dict declaring Collections that this collection requires to be installed for it to be usable."
                    },
                    "description": {
                        "type": "string",
                        "description": "A short summary description of the collection."
                    },
                    "docs_blob": {
                        "type": "object",
                        "description": "A JSON field holding the various documentation blobs in the collection."
                    },
                    "documentation": {
                        "type": "string",
                        "description": "The URL to any online docs.",
                        "maxLength": 2000
                    },
                    "homepage": {
                        "type": "string",
                        "description": "The URL to the homepage of the collection/project.",
                        "maxLength": 2000
                    },
                    "issues": {
                        "type": "string",
                        "description": "The URL to the collection issue tracker.",
                        "maxLength": 2000
                    },
                    "license": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of licenses for content inside of a collection."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the collection.",
                        "maxLength": 32
                    },
                    "namespace": {
                        "type": "string",
                        "description": "The namespace of the collection.",
                        "maxLength": 32
                    },
                    "repository": {
                        "type": "string",
                        "description": "The URL of the originating SCM repository.",
                        "maxLength": 2000
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ansible.TagResponse"
                        },
                        "readOnly": true
                    },
                    "version": {
                        "type": "string",
                        "description": "The version of the collection.",
                        "maxLength": 32
                    },
                    "deprecated": {
                        "type": "boolean",
                        "readOnly": true,
                        "description": "Whether or not the collection has been deprecated."
                    }
                },
                "required": [
                    "artifact",
                    "authors",
                    "contents",
                    "dependencies",
                    "description",
                    "docs_blob",
                    "documentation",
                    "homepage",
                    "id",
                    "issues",
                    "license",
                    "name",
                    "namespace",
                    "repository",
                    "version"
                ]
            },
            "ansible.Role": {
                "type": "object",
                "description": "A serializer for Role versions.",
                "properties": {
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "version": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    }
                },
                "required": [
                    "artifact",
                    "name",
                    "namespace",
                    "version"
                ]
            },
            "ansible.RoleRemote": {
                "type": "object",
                "description": "A serializer for Ansible Remotes.",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://user:password@host:port"
                    },
                    "username": {
                        "type": "string",
                        "nullable": true,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "nullable": true,
                        "description": "The password to be used for authentication when syncing."
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Total number of simultaneous connections."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyEnum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content."
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "ansible.RoleRemoteResponse": {
                "type": "object",
                "description": "A serializer for Ansible Remotes.",
                "properties": {
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "name": {
                        "type": "string",
                        "description": "A unique name for this remote."
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of an external content source."
                    },
                    "ca_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded CA certificate used to validate the server certificate presented by the remote server."
                    },
                    "client_cert": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded client certificate used for authentication."
                    },
                    "client_key": {
                        "type": "string",
                        "nullable": true,
                        "description": "A PEM encoded private key used for authentication."
                    },
                    "tls_validation": {
                        "type": "boolean",
                        "description": "If True, TLS peer validation must be performed."
                    },
                    "proxy_url": {
                        "type": "string",
                        "nullable": true,
                        "description": "The proxy URL. Format: scheme://user:password@host:port"
                    },
                    "username": {
                        "type": "string",
                        "nullable": true,
                        "description": "The username to be used for authentication when syncing."
                    },
                    "password": {
                        "type": "string",
                        "nullable": true,
                        "description": "The password to be used for authentication when syncing."
                    },
                    "pulp_last_updated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of the most recent update of the remote."
                    },
                    "download_concurrency": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Total number of simultaneous connections."
                    },
                    "policy": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PolicyEnum"
                            }
                        ],
                        "default": "immediate",
                        "description": "The policy to use when downloading content."
                    }
                },
                "required": [
                    "name",
                    "url"
                ]
            },
            "ansible.RoleResponse": {
                "type": "object",
                "description": "A serializer for Role versions.",
                "properties": {
                    "artifact": {
                        "type": "string",
                        "format": "uri",
                        "description": "Artifact file representing the physical content"
                    },
                    "pulp_created": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "Timestamp of creation."
                    },
                    "pulp_href": {
                        "type": "string",
                        "format": "uri",
                        "readOnly": true
                    },
                    "version": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    }
                },
                "required": [
                    "artifact",
                    "name",
                    "namespace",
                    "version"
                ]
            },
            "ansible.Tag": {
                "type": "object",
                "description": "A serializer for nesting in the CollectionVersion model.",
                "properties": {}
            },
            "ansible.TagResponse": {
                "type": "object",
                "description": "A serializer for nesting in the CollectionVersion model.",
                "properties": {
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of the Tag."
                    }
                }
            }
        },
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic"
            },
            "cookieAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "Session"
            }
        }
    },
    "servers": [
        {
            "url": "http://localhost:24817/"
        }
    ]
}
