{"swagger": "2.0", "info": {"title": "Pulp 3 API", "logo": {"url": "https://pulp.plan.io/attachments/download/517478/pulp_logo_word_rectangle.svg"}, "version": "v3"}, "host": "localhost:24817", "schemes": ["http"], "basePath": "/", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Basic": {"type": "basic"}}, "security": [{"Basic": []}], "paths": {"/ansible/collections/": {"post": {"operationId": "upload_collection", "summary": "Upload a collection", "description": "Create an artifact and trigger an asynchronous task to create Collection content from it.", "parameters": [{"name": "file", "in": "formData", "description": "The Collection tarball.", "required": true, "type": "file"}, {"name": "sha256", "in": "formData", "description": "An optional sha256 checksum of the uploaded file.", "required": false, "type": "string", "minLength": 1}, {"name": "expected_namespace", "in": "formData", "description": "The expected 'namespace' of the Collection to be verified against the metadata during import.", "required": false, "type": "string", "minLength": 1}, {"name": "expected_name", "in": "formData", "description": "The expected 'name' of the Collection to be verified against the metadata during import.", "required": false, "type": "string", "minLength": 1}, {"name": "expected_version", "in": "formData", "description": "The expected version of the Collection to be verified against the metadata during import.", "required": false, "type": "string", "minLength": 1}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["ansible: collections"]}, "parameters": []}, "/pulp/api/v3/ansible/collections/": {"get": {"operationId": "ansible_collections_list", "summary": "List collections", "description": "Viewset for Ansible Collections.", "parameters": [{"name": "namespace", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ansible.Collection"}}}}}}, "tags": ["ansible: collections"]}, "parameters": []}, "{collection_href}": {"get": {"operationId": "pulp_ansible_galaxy_api_v2_collections_read", "description": "Get the detail view of a Collection.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/GalaxyCollection"}}}, "tags": ["pulp_ansible: galaxy api collections"]}, "parameters": [{"name": "collection_href", "in": "path", "description": "URI of Collection. e.g.: /pulp_ansible/galaxy/1/api/v2/collections/1/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/ansible/collection_versions/": {"get": {"operationId": "content_ansible_collection_versions_list", "summary": "List collection versions", "description": "ViewSet for Ansible Collection.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "namespace", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "version", "in": "query", "description": "Filter results where version matches value", "required": false, "type": "string"}, {"name": "q", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "is_highest", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "certification", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "tags", "in": "query", "description": "Filter by comma separate list of tags that must all be matched", "required": false, "type": "string"}, {"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "deprecated", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ansible.CollectionVersion"}}}}}}, "tags": ["content: collection_versions"]}, "post": {"operationId": "content_ansible_collection_versions_create", "summary": "Create a collection version", "description": "ViewSet for Ansible Collection.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ansible.CollectionVersion"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ansible.CollectionVersion"}}}, "tags": ["content: collection_versions"]}, "parameters": []}, "{collection_version_href}": {"get": {"operationId": "content_ansible_collection_versions_read", "summary": "Inspect a collection version", "description": "ViewSet for Ansible Collection.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ansible.CollectionVersion"}}}, "tags": ["content: collection_versions"]}, "parameters": [{"name": "collection_version_href", "in": "path", "description": "URI of Collection Version. e.g.: /pulp/api/v3/content/ansible/collection_versions/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/content/ansible/roles/": {"get": {"operationId": "content_ansible_roles_list", "summary": "List roles", "description": "ViewSet for Role.", "parameters": [{"name": "name", "in": "query", "description": "Filter results where name matches value", "required": false, "type": "string"}, {"name": "namespace", "in": "query", "description": "Filter results where namespace matches value", "required": false, "type": "string"}, {"name": "version", "in": "query", "description": "Filter results where version matches value", "required": false, "type": "string"}, {"name": "repository_version", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_added", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "repository_version_removed", "in": "query", "description": "Repository Version referenced by HREF", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ansible.Role"}}}}}}, "tags": ["content: roles"]}, "post": {"operationId": "content_ansible_roles_create", "summary": "Create a role", "description": "ViewSet for Role.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ansible.Role"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ansible.Role"}}}, "tags": ["content: roles"]}, "parameters": []}, "{role_href}": {"get": {"operationId": "content_ansible_roles_read", "summary": "Inspect a role", "description": "ViewSet for Role.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ansible.Role"}}}, "tags": ["content: roles"]}, "parameters": [{"name": "role_href", "in": "path", "description": "URI of Role. e.g.: /pulp/api/v3/content/ansible/roles/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/distributions/ansible/ansible/": {"get": {"operationId": "distributions_ansible_ansible_list", "summary": "List ansible distributions", "description": "ViewSet for Ansible Distributions.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "base_path", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "base_path__contains", "in": "query", "description": "Filter results where base_path contains value", "required": false, "type": "string"}, {"name": "base_path__icontains", "in": "query", "description": "Filter results where base_path contains value", "required": false, "type": "string"}, {"name": "base_path__in", "in": "query", "description": "Filter results where base_path is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ansible.AnsibleDistribution"}}}}}}, "tags": ["distributions: ansible"]}, "post": {"operationId": "distributions_ansible_ansible_create", "summary": "Create an ansible distribution", "description": "Trigger an asynchronous create task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ansible.AnsibleDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: ansible"]}, "parameters": []}, "{ansible_distribution_href}": {"get": {"operationId": "distributions_ansible_ansible_read", "summary": "Inspect an ansible distribution", "description": "ViewSet for Ansible Distributions.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ansible.AnsibleDistribution"}}}, "tags": ["distributions: ansible"]}, "put": {"operationId": "distributions_ansible_ansible_update", "summary": "Update an ansible distribution", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ansible.AnsibleDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: ansible"]}, "patch": {"operationId": "distributions_ansible_ansible_partial_update", "summary": "Partially update an ansible distribution", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ansible.AnsibleDistribution"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: ansible"]}, "delete": {"operationId": "distributions_ansible_ansible_delete", "summary": "Delete an ansible distribution", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["distributions: ansible"]}, "parameters": [{"name": "ansible_distribution_href", "in": "path", "description": "URI of Ansible Distribution. e.g.: /pulp/api/v3/distributions/ansible/ansible/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/pulp_ansible/tags/": {"get": {"operationId": "pulp_ansible_tags_list", "summary": "List tags", "description": "ViewSet for Tag models.", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Tag"}}}}}}, "tags": ["pulp_ansible: tags"]}, "parameters": []}, "/pulp/api/v3/remotes/ansible/ansible/": {"get": {"operationId": "remotes_ansible_ansible_list", "summary": "List ansible remotes", "description": "ViewSet for Ansible Remotes.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "pulp_last_updated__lt", "in": "query", "description": "Filter results where pulp_last_updated is less than value", "required": false, "type": "string"}, {"name": "pulp_last_updated__lte", "in": "query", "description": "Filter results where pulp_last_updated is less than or equal to value", "required": false, "type": "string"}, {"name": "pulp_last_updated__gt", "in": "query", "description": "Filter results where pulp_last_updated is greater than value", "required": false, "type": "string"}, {"name": "pulp_last_updated__gte", "in": "query", "description": "Filter results where pulp_last_updated is greater than or equal to value", "required": false, "type": "string"}, {"name": "pulp_last_updated__range", "in": "query", "description": "Filter results where pulp_last_updated is between two comma separated values", "required": false, "type": "string"}, {"name": "pulp_last_updated", "in": "query", "description": "ISO 8601 formatted dates are supported", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ansible.AnsibleRemote"}}}}}}, "tags": ["remotes: ansible"]}, "post": {"operationId": "remotes_ansible_ansible_create", "summary": "Create an ansible remote", "description": "ViewSet for Ansible Remotes.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ansible.AnsibleRemote"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ansible.AnsibleRemote"}}}, "tags": ["remotes: ansible"]}, "parameters": []}, "{ansible_remote_href}": {"get": {"operationId": "remotes_ansible_ansible_read", "summary": "Inspect an ansible remote", "description": "ViewSet for Ansible Remotes.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ansible.AnsibleRemote"}}}, "tags": ["remotes: ansible"]}, "put": {"operationId": "remotes_ansible_ansible_update", "summary": "Update an ansible remote", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ansible.AnsibleRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: ansible"]}, "patch": {"operationId": "remotes_ansible_ansible_partial_update", "summary": "Partially update an ansible remote", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ansible.AnsibleRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: ansible"]}, "delete": {"operationId": "remotes_ansible_ansible_delete", "summary": "Delete an ansible remote", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: ansible"]}, "parameters": [{"name": "ansible_remote_href", "in": "path", "description": "URI of Ansible Remote. e.g.: /pulp/api/v3/remotes/ansible/ansible/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/remotes/ansible/collection/": {"get": {"operationId": "remotes_ansible_collection_list", "summary": "List collection remotes", "description": "ViewSet for Collection Remotes.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "pulp_last_updated__lt", "in": "query", "description": "Filter results where pulp_last_updated is less than value", "required": false, "type": "string"}, {"name": "pulp_last_updated__lte", "in": "query", "description": "Filter results where pulp_last_updated is less than or equal to value", "required": false, "type": "string"}, {"name": "pulp_last_updated__gt", "in": "query", "description": "Filter results where pulp_last_updated is greater than value", "required": false, "type": "string"}, {"name": "pulp_last_updated__gte", "in": "query", "description": "Filter results where pulp_last_updated is greater than or equal to value", "required": false, "type": "string"}, {"name": "pulp_last_updated__range", "in": "query", "description": "Filter results where pulp_last_updated is between two comma separated values", "required": false, "type": "string"}, {"name": "pulp_last_updated", "in": "query", "description": "ISO 8601 formatted dates are supported", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ansible.CollectionRemote"}}}}}}, "tags": ["remotes: collection"]}, "post": {"operationId": "remotes_ansible_collection_create", "summary": "Create a collection remote", "description": "ViewSet for Collection Remotes.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ansible.CollectionRemote"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ansible.CollectionRemote"}}}, "tags": ["remotes: collection"]}, "parameters": []}, "{collection_remote_href}": {"get": {"operationId": "remotes_ansible_collection_read", "summary": "Inspect a collection remote", "description": "ViewSet for Collection Remotes.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ansible.CollectionRemote"}}}, "tags": ["remotes: collection"]}, "put": {"operationId": "remotes_ansible_collection_update", "summary": "Update a collection remote", "description": "Trigger an asynchronous update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ansible.CollectionRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: collection"]}, "patch": {"operationId": "remotes_ansible_collection_partial_update", "summary": "Partially update a collection remote", "description": "Trigger an asynchronous partial update task", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ansible.CollectionRemote"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: collection"]}, "delete": {"operationId": "remotes_ansible_collection_delete", "summary": "Delete a collection remote", "description": "Trigger an asynchronous delete task", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["remotes: collection"]}, "parameters": [{"name": "collection_remote_href", "in": "path", "description": "URI of Collection Remote. e.g.: /pulp/api/v3/remotes/ansible/collection/1/", "required": true, "type": "string"}]}, "/pulp/api/v3/repositories/ansible/ansible/": {"get": {"operationId": "repositories_ansible_ansible_list", "summary": "List ansible repositorys", "description": "ViewSet for Ansible Remotes.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Filter results where name is in a comma-separated list of values", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ansible.AnsibleRepository"}}}}}}, "tags": ["repositories: ansible"]}, "post": {"operationId": "repositories_ansible_ansible_create", "summary": "Create an ansible repository", "description": "ViewSet for Ansible Remotes.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ansible.AnsibleRepository"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ansible.AnsibleRepository"}}}, "tags": ["repositories: ansible"]}, "parameters": []}, "{ansible_repository_href}": {"get": {"operationId": "repositories_ansible_ansible_read", "summary": "Inspect an ansible repository", "description": "ViewSet for Ansible Remotes.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ansible.AnsibleRepository"}}}, "tags": ["repositories: ansible"]}, "put": {"operationId": "repositories_ansible_ansible_update", "summary": "Update an ansible repository", "description": "Trigger an asynchronous task to update a repository.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ansible.AnsibleRepository"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: ansible"]}, "patch": {"operationId": "repositories_ansible_ansible_partial_update", "summary": "Partially update an ansible repository", "description": "ViewSet for Ansible Remotes.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ansible.AnsibleRepository"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ansible.AnsibleRepository"}}}, "tags": ["repositories: ansible"]}, "delete": {"operationId": "repositories_ansible_ansible_delete", "summary": "Delete an ansible repository", "description": "Trigger an asynchronous task to delete a repository.", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: ansible"]}, "parameters": [{"name": "ansible_repository_href", "in": "path", "description": "URI of Ansible Repository. e.g.: /pulp/api/v3/repositories/ansible/ansible/1/", "required": true, "type": "string"}]}, "{ansible_repository_href}sync/": {"post": {"operationId": "repositories_ansible_ansible_sync", "description": "Trigger an asynchronous task to sync Ansible content.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RepositorySyncURL"}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: ansible"]}, "parameters": [{"name": "ansible_repository_href", "in": "path", "description": "URI of Ansible Repository. e.g.: /pulp/api/v3/repositories/ansible/ansible/1/", "required": true, "type": "string"}]}, "{ansible_repository_href}versions/": {"get": {"operationId": "repositories_ansible_ansible_versions_list", "summary": "List repository versions", "description": "RpmRepositoryVersion represents a single file repository version.", "parameters": [{"name": "ordering", "in": "query", "description": "Which field to use when ordering the results.", "required": false, "type": "string"}, {"name": "number", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "number__lt", "in": "query", "description": "Filter results where number is less than value", "required": false, "type": "number"}, {"name": "number__lte", "in": "query", "description": "Filter results where number is less than or equal to value", "required": false, "type": "number"}, {"name": "number__gt", "in": "query", "description": "Filter results where number is greater than value", "required": false, "type": "number"}, {"name": "number__gte", "in": "query", "description": "Filter results where number is greater than or equal to value", "required": false, "type": "number"}, {"name": "number__range", "in": "query", "description": "Filter results where number is between two comma separated values", "required": false, "type": "number"}, {"name": "pulp_created__lt", "in": "query", "description": "Filter results where pulp_created is less than value", "required": false, "type": "string"}, {"name": "pulp_created__lte", "in": "query", "description": "Filter results where pulp_created is less than or equal to value", "required": false, "type": "string"}, {"name": "pulp_created__gt", "in": "query", "description": "Filter results where pulp_created is greater than value", "required": false, "type": "string"}, {"name": "pulp_created__gte", "in": "query", "description": "Filter results where pulp_created is greater than or equal to value", "required": false, "type": "string"}, {"name": "pulp_created__range", "in": "query", "description": "Filter results where pulp_created is between two comma separated values", "required": false, "type": "string"}, {"name": "content", "in": "query", "description": "Content Unit referenced by HREF", "required": false, "type": "string"}, {"name": "pulp_created", "in": "query", "description": "ISO 8601 formatted dates are supported", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/RepositoryVersion"}}}}}}, "tags": ["repositories: ansible versions"]}, "parameters": [{"name": "ansible_ansible_repository_href", "in": "path", "description": "URI of Ansible Repository. e.g.: /pulp/api/v3/repositories/ansible/ansible/1/", "required": true, "type": "string"}]}, "{ansible_repository_version_href}": {"get": {"operationId": "repositories_ansible_ansible_versions_read", "summary": "Inspect a repository version", "description": "RpmRepositoryVersion represents a single file repository version.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RepositoryVersion"}}}, "tags": ["repositories: ansible versions"]}, "delete": {"operationId": "repositories_ansible_ansible_versions_delete", "summary": "Delete a repository version", "description": "Trigger an asynchronous task to delete a repositroy version.", "parameters": [], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "tags": ["repositories: ansible versions"]}, "parameters": [{"name": "ansible_repository_version_href", "in": "path", "description": "URI of Repository Version. e.g.: /pulp/api/v3/repositories/ansible/ansible/1/versions/1/", "required": true, "type": "string"}]}, "/pulp_ansible/galaxy/{path}/api/": {"get": {"operationId": "pulp_ansible_galaxy_api_list", "description": "Return a response to the \"GET\" action.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": ""}}, "tags": ["pulp_ansible: api"]}, "parameters": [{"name": "path", "in": "path", "required": true, "type": "string"}]}, "/pulp_ansible/galaxy/{path}/api/v1/roles/": {"get": {"operationId": "pulp_ansible_galaxy_api_v1_roles_list", "description": "APIView for Roles.", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/GalaxyRole"}}}}}}, "tags": ["pulp_ansible: galaxy api roles"]}, "parameters": [{"name": "path", "in": "path", "required": true, "type": "string"}]}, "/pulp_ansible/galaxy/{path}/api/v1/roles/{role_pk}/versions/": {"get": {"operationId": "pulp_ansible_galaxy_api_v1_roles_versions_list", "description": "APIView for Role Versions.", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/GalaxyRoleVersion"}}}}}}, "tags": ["pulp_ansible: galaxy api v1 versions"]}, "parameters": [{"name": "path", "in": "path", "required": true, "type": "string"}, {"name": "role_pk", "in": "path", "required": true, "type": "string"}]}, "/pulp_ansible/galaxy/{path}/api/v2/collections/": {"get": {"operationId": "pulp_ansible_galaxy_api_v2_collections_list", "description": "View for Collection models.", "parameters": [{"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/GalaxyCollection"}}}}}}, "tags": ["pulp_ansible: galaxy api collections"]}, "post": {"operationId": "pulp_ansible_galaxy_api_v2_collections_create", "description": "Queues a task that creates a new Collection from an uploaded artifact.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/GalaxyCollection"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/GalaxyCollection"}}}, "tags": ["pulp_ansible: galaxy api collections"]}, "parameters": [{"name": "path", "in": "path", "required": true, "type": "string"}]}, "{collection_href}versions/": {"get": {"operationId": "pulp_ansible_galaxy_api_v2_collections_versions_list", "description": "APIView for Collections by namespace/name.", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/GalaxyCollectionVersion"}}}}}}, "tags": ["pulp_ansible: galaxy api v2 versions"]}, "parameters": [{"name": "collection_href", "in": "path", "description": "URI of Collection. e.g.: /pulp_ansible/galaxy/1/api/v2/collections/1/1/", "required": true, "type": "string"}]}, "/pulp_ansible/galaxy/{path}/api/v3/artifacts/collections/": {"post": {"operationId": "pulp_ansible_galaxy_api_v3_artifacts_collections_create", "summary": "Upload a collection", "description": "Create an artifact and trigger an asynchronous task to create Collection content from it.", "parameters": [{"name": "file", "in": "formData", "description": "The Collection tarball.", "required": true, "type": "file"}, {"name": "sha256", "in": "formData", "description": "An optional sha256 checksum of the uploaded file.", "required": false, "type": "string", "minLength": 1}, {"name": "expected_namespace", "in": "formData", "description": "The expected 'namespace' of the Collection to be verified against the metadata during import.", "required": false, "type": "string", "minLength": 1}, {"name": "expected_name", "in": "formData", "description": "The expected 'name' of the Collection to be verified against the metadata during import.", "required": false, "type": "string", "minLength": 1}, {"name": "expected_version", "in": "formData", "description": "The expected version of the Collection to be verified against the metadata during import.", "required": false, "type": "string", "minLength": 1}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/AsyncOperationResponse"}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["pulp_ansible: galaxy api v3 collections"]}, "parameters": [{"name": "path", "in": "path", "required": true, "type": "string"}]}, "/pulp_ansible/galaxy/{path}/api/v3/collections/": {"get": {"operationId": "pulp_ansible_galaxy_api_v3_collections_list", "description": "ViewSet for Collections.", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Collection"}}}}}}, "tags": ["pulp_ansible: galaxy api collections"]}, "parameters": [{"name": "path", "in": "path", "required": true, "type": "string"}]}, "{collection_import_href}": {"get": {"operationId": "pulp_ansible_galaxy_api_v3_imports_collections_read", "summary": "Inspect a collection import", "description": "Returns a CollectionImport object.", "parameters": [{"name": "fields", "in": "query", "description": "A list of fields to include in the response.", "required": false, "type": "string"}, {"name": "exclude_fields", "in": "query", "description": "A list of fields to exclude from the response.", "required": false, "type": "string"}, {"name": "since", "in": "query", "description": "Filter messages since a given timestamp", "type": "string", "format": "date-time"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CollectionImportDetail"}}}, "tags": ["pulp_ansible: galaxy api v3 collections"]}, "parameters": [{"name": "collection_import_href", "in": "path", "description": "URI of Collection Import. e.g.: /pulp_ansible/galaxy/1/api/v3/imports/collections/1/", "required": true, "type": "string"}]}}, "definitions": {"AsyncOperationResponse": {"required": ["task"], "type": "object", "properties": {"task": {"title": "Task", "description": "The href of the task.", "type": "string", "format": "uri"}}}, "ansible.Collection": {"required": ["name", "namespace"], "type": "object", "properties": {"name": {"title": "Name", "description": "The name of the Collection.", "type": "string", "minLength": 1}, "namespace": {"title": "Namespace", "description": "The namespace of the Collection.", "type": "string", "minLength": 1}}}, "ansible.Tag": {"type": "object", "properties": {"name": {"title": "Name", "description": "The name of the Tag.", "type": "string", "readOnly": true, "minLength": 1}}}, "ansible.CollectionVersion": {"required": ["artifact", "id", "authors", "contents", "dependencies", "description", "docs_blob", "documentation", "homepage", "issues", "certification", "license", "name", "namespace", "repository", "version"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "artifact": {"title": "Artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "md5": {"title": "Md5", "description": "The MD5 checksum if available.", "type": "string", "readOnly": true, "minLength": 1}, "sha1": {"title": "Sha1", "description": "The SHA-1 checksum if available.", "type": "string", "readOnly": true, "minLength": 1}, "sha224": {"title": "Sha224", "description": "The SHA-224 checksum if available.", "type": "string", "readOnly": true, "minLength": 1}, "sha256": {"title": "Sha256", "description": "The SHA-256 checksum if available.", "type": "string", "readOnly": true, "minLength": 1}, "sha384": {"title": "Sha384", "description": "The SHA-384 checksum if available.", "type": "string", "readOnly": true, "minLength": 1}, "sha512": {"title": "Sha512", "description": "The SHA-512 checksum if available.", "type": "string", "readOnly": true, "minLength": 1}, "id": {"title": "Id", "description": "A collection identifier.", "type": "string", "format": "uuid"}, "authors": {"description": "A list of the CollectionVersion content's authors.", "type": "array", "items": {"type": "string", "maxLength": 64, "minLength": 1}}, "contents": {"description": "A JSON field with data about the contents.", "type": "array", "items": {"type": "object", "additionalProperties": {"type": "string"}}}, "dependencies": {"title": "Dependencies", "description": "A dict declaring Collections that this collection requires to be installed for it to be usable.", "type": "object", "additionalProperties": {"type": "string"}}, "description": {"title": "Description", "description": "A short summary description of the collection.", "type": "string"}, "docs_blob": {"title": "Docs blob", "description": "A JSON field holding the various documentation blobs in the collection.", "type": "object", "additionalProperties": {"type": "string"}}, "documentation": {"title": "Documentation", "description": "The URL to any online docs.", "type": "string", "format": "uri", "maxLength": 128}, "homepage": {"title": "Homepage", "description": "The URL to the homepage of the collection/project.", "type": "string", "format": "uri", "maxLength": 128}, "issues": {"title": "Issues", "description": "The URL to the collection issue tracker.", "type": "string", "format": "uri", "maxLength": 128}, "certification": {"title": "Certification", "description": "Indicates that the version is certified", "type": "string", "minLength": 1}, "license": {"description": "A list of licenses for content inside of a collection.", "type": "array", "items": {"type": "string", "maxLength": 32, "minLength": 1}}, "name": {"title": "Name", "description": "The name of the collection.", "type": "string", "maxLength": 32, "minLength": 1}, "namespace": {"title": "Namespace", "description": "The namespace of the collection.", "type": "string", "maxLength": 32, "minLength": 1}, "repository": {"title": "Repository", "description": "The URL of the originating SCM repository.", "type": "string", "format": "uri", "maxLength": 128}, "tags": {"type": "array", "items": {"$ref": "#/definitions/ansible.Tag"}, "readOnly": true}, "version": {"title": "Version", "description": "The version of the collection.", "type": "string", "maxLength": 32, "minLength": 1}, "deprecated": {"title": "Deprecated", "description": "Whether or not the collection has been deprecated.", "type": "boolean", "readOnly": true}}}, "ansible.Role": {"required": ["artifact", "version", "name", "namespace"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "artifact": {"title": "Artifact", "description": "Artifact file representing the physical content", "type": "string", "format": "uri"}, "version": {"title": "Version", "type": "string", "minLength": 1}, "name": {"title": "Name", "type": "string", "minLength": 1}, "namespace": {"title": "Namespace", "type": "string", "minLength": 1}}}, "ansible.AnsibleDistribution": {"required": ["base_path", "name"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "base_path": {"title": "Base path", "description": "The base (relative) path component of the published url. Avoid paths that                     overlap with other distribution base paths (e.g. \"foo\" and \"foo/bar\")", "type": "string", "minLength": 1}, "content_guard": {"title": "Content guard", "description": "An optional content-guard.", "type": "string", "format": "uri", "x-nullable": true}, "name": {"title": "Name", "description": "A unique name. Ex, `rawhide` and `stable`.", "type": "string", "minLength": 1}, "repository": {"title": "Repository", "description": "The latest RepositoryVersion for this Repository will be served.", "type": "string", "format": "uri", "x-nullable": true}, "repository_version": {"title": "Repository version", "description": "RepositoryVersion to be served", "type": "string", "format": "uri", "x-nullable": true}, "client_url": {"title": "Client url", "description": "The URL of a Collection content source.", "type": "string", "readOnly": true}}}, "Tag": {"type": "object", "properties": {"name": {"title": "Name", "type": "string", "readOnly": true, "minLength": 1}}}, "ansible.AnsibleRemote": {"required": ["name", "url"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "name": {"title": "Name", "description": "A unique name for this remote.", "type": "string", "minLength": 1}, "url": {"title": "Url", "description": "The URL of an external content source.", "type": "string", "minLength": 1}, "ca_cert": {"title": "Ca cert", "description": "A string containing the PEM encoded CA certificate used to validate the server certificate presented by the remote server. All new line characters must be escaped. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "client_cert": {"title": "Client cert", "description": "A string containing the PEM encoded client certificate used for authentication. All new line characters must be escaped. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "client_key": {"title": "Client key", "description": "A PEM encoded private key used for authentication. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "tls_validation": {"title": "Tls validation", "description": "If True, TLS peer validation must be performed.", "type": "boolean"}, "proxy_url": {"title": "Proxy url", "description": "The proxy URL. Format: scheme://user:password@host:port", "type": "string", "minLength": 1, "x-nullable": true}, "pulp_last_updated": {"title": "Pulp last updated", "description": "Timestamp of the most recent update of the remote.", "type": "string", "format": "date-time", "readOnly": true}, "download_concurrency": {"title": "Download concurrency", "description": "Total number of simultaneous connections.", "type": "integer", "minimum": 1}, "policy": {"title": "Policy", "description": "The policy to use when downloading content.", "type": "string", "enum": ["immediate", "When syncing, download all metadata and content now."], "default": "immediate"}}}, "ansible.CollectionRemote": {"required": ["name", "url"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "name": {"title": "Name", "description": "A unique name for this remote.", "type": "string", "minLength": 1}, "url": {"title": "Url", "description": "The URL of an external content source.", "type": "string", "minLength": 1}, "ca_cert": {"title": "Ca cert", "description": "A string containing the PEM encoded CA certificate used to validate the server certificate presented by the remote server. All new line characters must be escaped. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "client_cert": {"title": "Client cert", "description": "A string containing the PEM encoded client certificate used for authentication. All new line characters must be escaped. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "client_key": {"title": "Client key", "description": "A PEM encoded private key used for authentication. Returns SHA256 sum on GET.", "type": "string", "minLength": 1, "x-nullable": true}, "tls_validation": {"title": "Tls validation", "description": "If True, TLS peer validation must be performed.", "type": "boolean"}, "proxy_url": {"title": "Proxy url", "description": "The proxy URL. Format: scheme://user:password@host:port", "type": "string", "minLength": 1, "x-nullable": true}, "pulp_last_updated": {"title": "Pulp last updated", "description": "Timestamp of the most recent update of the remote.", "type": "string", "format": "date-time", "readOnly": true}, "download_concurrency": {"title": "Download concurrency", "description": "Total number of simultaneous connections.", "type": "integer", "minimum": 1}, "policy": {"title": "Policy", "description": "The policy to use when downloading content.", "type": "string", "enum": ["immediate", "When syncing, download all metadata and content now."], "default": "immediate"}, "requirements_file": {"title": "Requirements file", "description": "The string version of Collection requirements yaml.", "type": "string", "minLength": 1, "x-nullable": true}}}, "ansible.AnsibleRepository": {"required": ["name"], "type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "versions_href": {"title": "Versions href", "type": "string", "format": "uri", "readOnly": true}, "latest_version_href": {"title": "Latest version href", "type": "string", "format": "uri", "readOnly": true}, "name": {"title": "Name", "description": "A unique name for this repository.", "type": "string", "minLength": 1}, "description": {"title": "Description", "description": "An optional description.", "type": "string", "minLength": 1, "x-nullable": true}}}, "RepositorySyncURL": {"required": ["remote"], "type": "object", "properties": {"remote": {"title": "Remote", "description": "A URI of the repository to be synchronized.", "type": "string", "format": "uri"}, "mirror": {"title": "Mirror", "description": "If ``True``, synchronization will remove all content that is not present in the remote repository. If ``False``, sync will be additive only.", "type": "boolean", "default": false}}}, "ContentSummary": {"title": "Content summary", "description": "Various count summaries of the content in the version and the HREF to view them.", "required": ["added", "removed", "present"], "type": "object", "properties": {"added": {"title": "Added", "type": "object", "additionalProperties": {"type": "object", "additionalProperties": {"type": "string"}}}, "removed": {"title": "Removed", "type": "object", "additionalProperties": {"type": "object", "additionalProperties": {"type": "string"}}}, "present": {"title": "Present", "type": "object", "additionalProperties": {"type": "object", "additionalProperties": {"type": "string"}}}}}, "RepositoryVersion": {"type": "object", "properties": {"pulp_href": {"title": "Pulp href", "type": "string", "format": "uri", "readOnly": true}, "pulp_created": {"title": "Pulp created", "description": "Timestamp of creation.", "type": "string", "format": "date-time", "readOnly": true}, "number": {"title": "Number", "type": "integer", "readOnly": true}, "base_version": {"title": "Base version", "description": "A repository version whose content was used as the initial set of content for this repository version", "type": "string", "format": "uri"}, "content_summary": {"$ref": "#/definitions/ContentSummary"}}}, "GalaxyRole": {"required": ["name", "namespace"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "readOnly": true}, "name": {"title": "Name", "type": "string", "minLength": 1}, "namespace": {"title": "Namespace", "type": "string", "minLength": 1}}}, "GalaxyRoleVersion": {"required": ["name"], "type": "object", "properties": {"name": {"title": "Name", "type": "string", "minLength": 1}, "source": {"title": "Source", "type": "string", "readOnly": true}}}, "GalaxyCollection": {"required": ["name", "namespace"], "type": "object", "properties": {"name": {"title": "Name", "type": "string", "minLength": 1}, "namespace": {"title": "Namespace", "type": "string", "minLength": 1}, "href": {"title": "Href", "type": "string", "readOnly": true}, "versions_url": {"title": "Versions url", "type": "string", "readOnly": true}}}, "CollectionMetadata": {"title": "Metadata", "required": ["tags"], "type": "object", "properties": {"authors": {"type": "array", "items": {"title": "Authors", "type": "string", "maxLength": 64, "minLength": 1}, "readOnly": true}, "contents": {"title": "Contents", "type": "object", "readOnly": true}, "dependencies": {"title": "Dependencies", "type": "object", "readOnly": true}, "description": {"title": "Description", "type": "string", "readOnly": true, "minLength": 1}, "documentation": {"title": "Documentation", "type": "string", "format": "uri", "readOnly": true, "minLength": 1}, "homepage": {"title": "Homepage", "type": "string", "format": "uri", "readOnly": true, "minLength": 1}, "issues": {"title": "Issues", "type": "string", "format": "uri", "readOnly": true, "minLength": 1}, "license": {"type": "array", "items": {"title": "License", "type": "string", "maxLength": 32, "minLength": 1}, "readOnly": true}, "repository": {"title": "Repository", "type": "string", "format": "uri", "readOnly": true, "minLength": 1}, "tags": {"type": "array", "items": {"type": "string"}, "uniqueItems": true}}}, "GalaxyCollectionVersion": {"required": ["version", "metadata"], "type": "object", "properties": {"version": {"title": "Version", "type": "string", "minLength": 1}, "href": {"title": "Href", "type": "string", "readOnly": true}, "namespace": {"title": "Namespace", "type": "string", "readOnly": true}, "collection": {"title": "Collection", "type": "string", "readOnly": true}, "artifact": {"title": "Artifact", "type": "string", "readOnly": true}, "metadata": {"$ref": "#/definitions/CollectionMetadata"}}}, "Collection": {"required": ["created_at", "updated_at", "deprecated"], "type": "object", "properties": {"href": {"title": "Href", "type": "string", "readOnly": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time"}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time"}, "namespace": {"title": "Namespace", "type": "string", "readOnly": true, "minLength": 1}, "name": {"title": "Name", "type": "string", "readOnly": true, "minLength": 1}, "deprecated": {"title": "Deprecated", "type": "boolean"}, "versions_url": {"title": "Versions url", "type": "string", "readOnly": true}, "highest_version": {"title": "Highest version", "type": "string", "readOnly": true}}}, "CollectionRef": {"title": "Collection", "required": ["id", "name"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "minLength": 1}, "name": {"title": "Name", "type": "string", "minLength": 1}, "href": {"title": "Href", "type": "string", "readOnly": true}}}, "CollectionNamespace": {"title": "Namespace", "required": ["name"], "type": "object", "properties": {"name": {"title": "Name", "type": "string", "minLength": 1}}}, "CollectionVersion": {"required": ["created_at", "updated_at"], "type": "object", "properties": {"version": {"title": "Version", "type": "string", "readOnly": true, "minLength": 1}, "certification": {"title": "Certification", "type": "string", "enum": ["certified", "not_certified", "needs_review"]}, "href": {"title": "Href", "type": "string", "readOnly": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time"}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time"}, "artifact": {"title": "Artifact", "type": "string", "readOnly": true}, "collection": {"$ref": "#/definitions/CollectionRef"}, "download_url": {"title": "Download url", "type": "string", "readOnly": true}, "name": {"title": "Name", "type": "string", "readOnly": true, "minLength": 1}, "namespace": {"$ref": "#/definitions/CollectionNamespace"}, "metadata": {"$ref": "#/definitions/CollectionMetadata"}}}, "CollectionImportDetail": {"required": ["id", "state", "created_at", "updated_at", "started_at", "finished_at", "error", "messages"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid"}, "state": {"title": "State", "type": "string", "minLength": 1}, "created_at": {"title": "Created at", "type": "string", "format": "date-time"}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time"}, "started_at": {"title": "Started at", "type": "string", "format": "date-time"}, "finished_at": {"title": "Finished at", "type": "string", "format": "date-time"}, "error": {"title": "Error", "type": "object"}, "messages": {"title": "Messages", "type": "object"}}}}, "tags": [{"name": "ansible: collections", "x-displayName": "Ansible: Collections"}, {"name": "content: collection_versions", "x-displayName": "Content: Collection_Versions"}, {"name": "content: roles", "x-displayName": "Content: Roles"}, {"name": "distributions: ansible", "x-displayName": "Distributions: Ansible"}, {"name": "pulp_ansible: tags", "x-displayName": "Pulp_Ansible: Tags"}, {"name": "remotes: ansible", "x-displayName": "Remotes: Ansible"}, {"name": "remotes: collection", "x-displayName": "Remotes: Collection"}, {"name": "repositories: ansible", "x-displayName": "Repositories: Ansible"}, {"name": "repositories: ansible versions", "x-displayName": "Repositories: Ansible Versions"}, {"name": "pulp_ansible: api", "x-displayName": "Pulp_Ansible: Api"}, {"name": "pulp_ansible: galaxy api roles", "x-displayName": "Pulp_Ansible: Galaxy Api Roles"}, {"name": "pulp_ansible: galaxy api v1 versions", "x-displayName": "Pulp_Ansible: Galaxy Api V1 Versions"}, {"name": "pulp_ansible: galaxy api collections", "x-displayName": "Pulp_Ansible: Galaxy Api Collections"}, {"name": "pulp_ansible: galaxy api v2 versions", "x-displayName": "Pulp_Ansible: Galaxy Api V2 Versions"}, {"name": "pulp_ansible: galaxy api v3 collections", "x-displayName": "Pulp_Ansible: Galaxy Api V3 Collections"}, {"name": "pulp_ansible: galaxy api v3 versions", "x-displayName": "Pulp_Ansible: Galaxy Api V3 Versions"}]}