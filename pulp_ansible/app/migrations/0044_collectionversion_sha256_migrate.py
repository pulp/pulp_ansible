# Generated by Django 3.2.14 on 2022-07-21 22:35
import tarfile
from django.db import migrations, transaction

from pulp_ansible.app.tasks.utils import get_file_obj_from_tarball
import hashlib

def add_sha256_to_current_models(apps, schema_editor):
    """Adds the sha256 to current CollectionVersion models."""
    CollectionVersion = apps.get_model('ansible', 'CollectionVersion')
    ContentArtifact = apps.get_model('core', 'ContentArtifact')
    collection_bulk = {}
    collections_to_update = []
    collections_on_demand = []

    def find_and_update_sha256():
        # All content have a ContentArtifact
        content_artifacts = ContentArtifact.objects.filter(content__in=collection_bulk.keys()).select_related("artifact", "content")
        for content_artifact in content_artifacts:
            found_collection = collection_bulk[content_artifact.content.pk]
            # The ContentArtifact could point to an Artifact or be on-demand
            if (artifact := getattr(content_artifact, "artifact")) and artifact.sha256 is not None:
                with artifact.file.open() as artifact_file, tarfile.open(fileobj=artifact_file, mode="r") as tar:
                    manifest = get_file_obj_from_tarball(tar, "MANIFEST.json", artifact_file)
                    data = manifest.read()
                    digest = hashlib.sha256(data).digest()
                found_collection.sha256 = digest
                collections_to_update.append(found_collection)
            else:
                collections_on_demand.append(found_collection)
        collection_bulk.clear()

    for collection_version in CollectionVersion.objects.only("pk", "sha256").iterator():
        if not collection_version.sha256:
            collection_bulk[collection_version.pk] = collection_version
            if len(collection_bulk) == 1024:
                find_and_update_sha256()
            if len(collections_to_update) >= 1024:
                with transaction.atomic():
                    CollectionVersion.objects.bulk_update(collections_to_update, ["sha256",])
                collections_to_update.clear()
    # Update remaining collections
    if len(collection_bulk) > 0:
        find_and_update_sha256()
        if len(collections_to_update) > 0:
            with transaction.atomic():
                CollectionVersion.objects.bulk_update(collections_to_update, ["sha256",])

    # If there are on-demand collections then the next migration will fail, so error here with
    # helpful message on how to fix. No work will be performed by this migration on a second-run.
    if len(collections_on_demand) > 0:
        raise Exception(
            f"On demand collections found. Please remove or upload/sync their data: "
            f"{[c.pk for c in collections_on_demand]}"
        )


class Migration(migrations.Migration):

    atomic = False

    dependencies = [
        ('ansible', '0043_collectionversion_sha256'),
    ]

    operations = [
        migrations.RunPython(add_sha256_to_current_models, migrations.RunPython.noop)
    ]
