# WARNING: DO NOT EDIT!
#
# This file was generated by plugin_template, and is managed by it. Please use
# './plugin-template --github pulp_ansible' to update this file.
#
# For more info visit https://github.com/pulp/plugin_template
---
name: Release Pipeline
on:
  workflow_dispatch:
    inputs:
      release:
        description: "Release tag (e.g. 3.2.1)"
        required: true
      commit_sha:
        description: "Full commit hash that should be used for the release."
        required: true

env:
  RELEASE_WORKFLOW: true

jobs:
  build-artifacts:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
        with:
          # by default, it uses a depth of 1
          # this fetches all history so that we can read each commit
          fetch-depth: 0

      - uses: actions/setup-python@v2
        with:
          python-version: "3.7"

      - name: Install python dependencies
        run: |
          echo ::group::PYDEPS
          pip install bandersnatch wheel gitpython
          echo ::endgroup::

      - name: Create a tag and build plugin package
        run: python .github/workflows/scripts/create_tag_and_build_package.py ${{ github.event.inputs.release }} ${{ github.event.inputs.commit_sha }}

      - name: 'Tar files'
        run: tar -cvf pulp_ansible.tar $GITHUB_WORKSPACE

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: pulp_ansible.tar
          path: pulp_ansible.tar
  test:
    needs: build-artifacts

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        env:
          - TEST: pulp
          - TEST: docs
          - TEST: s3
          - TEST: generate-bindings

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: pulp_ansible.tar

      - uses: actions/setup-python@v2
        with:
          python-version: "3.7"
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: "2.6"

      - name: Untar repository
        run: |
          shopt -s dotglob
          tar -xf pulp_ansible.tar
          mv home/runner/work/pulp_ansible/pulp_ansible/* ./

      # update to the branch's latest ci files rather than the ones from the release tag. this is
      # helpful when there was a problem with the ci files during the release which needs to be
      # fixed after the release tag has been created
      - name: Update ci files
        run: |
          git checkout "origin/${GITHUB_REF##*/}" -- .ci
          git checkout "origin/${GITHUB_REF##*/}" -- .github

      - name: Install httpie
        run: |
          echo ::group::HTTPIE
          sudo apt-get update -yq
          sudo -E apt-get -yq --no-install-suggests --no-install-recommends install httpie
          echo ::endgroup::
          echo "HTTPIE_CONFIG_DIR=$GITHUB_WORKSPACE/.ci/assets/httpie/" >> $GITHUB_ENV
          echo "TEST=${{ matrix.env.TEST }}" >> $GITHUB_ENV

      - name: Before Install
        run: .github/workflows/scripts/before_install.sh
        shell: bash

      - name: Install
        run: |
          export PLUGIN_VERSION=${{ github.event.inputs.release }}
          .github/workflows/scripts/install.sh
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
        shell: bash

      - name: Before Script
        run: |
          .github/workflows/scripts/before_script.sh

      - name: Setting secrets
        run: python3 .github/workflows/scripts/secrets.py "$SECRETS_CONTEXT"
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}

      - name: Install Python client
        if: ${{ env.TEST == 'bindings' || env.TEST == 'generate-bindings' }}
        run: .github/workflows/scripts/install_python_client.sh

      - name: Install Ruby client
        if: ${{ env.TEST == 'bindings' || env.TEST == 'generate-bindings' }}
        run: .github/workflows/scripts/install_ruby_client.sh

      - name: Script
        run: .github/workflows/scripts/script.sh
        shell: bash

      - name: Upload python client packages
        if: ${{ env.TEST == 'bindings' }}
        uses: actions/upload-artifact@v2
        with:
          name: python-client.tar
          path: python-client.tar

      - name: Upload ruby client packages
        if: ${{ env.TEST == 'bindings' }}
        uses: actions/upload-artifact@v2
        with:
          name: pulp_ansible_client-${{ github.event.inputs.release }}.gem
          path: pulp_ansible_client-${{ github.event.inputs.release }}.gem

      - name: Upload built docs
        if: ${{ env.TEST == 'docs' }}
        uses: actions/upload-artifact@v2
        with:
          name: docs.tar
          path: docs/docs.tar

      - name: After failure
        if: failure()
        run: |
          http --timeout 30 --check-status --pretty format --print hb http://pulp/pulp/api/v3/status/ || true
          docker images || true
          docker ps -a || true
          docker logs pulp || true
          docker exec pulp ls -latr /etc/yum.repos.d/ || true
          docker exec pulp cat /etc/yum.repos.d/* || true
          docker exec pulp pip3 list


  publish:
    runs-on: ubuntu-latest
    needs: test

    env:
      TEST: publish
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: pulp_ansible.tar

      - uses: actions/setup-python@v2
        with:
          python-version: "3.7"

      - uses: actions/setup-ruby@v1
        with:
          ruby-version: "2.6"

      - name: Untar repository
        run: |
          shopt -s dotglob
          tar -xf pulp_ansible.tar
          mv home/runner/work/pulp_ansible/pulp_ansible/* ./

      # update to the branch's latest ci files rather than the ones from the release tag. this is
      # helpful when there was a problem with the ci files during the release which needs to be
      # fixed after the release tag has been created
      - name: Update ci files
        run: |
          git checkout "origin/${GITHUB_REF##*/}" -- .ci
          git checkout "origin/${GITHUB_REF##*/}" -- .github

      - name: Setting secrets
        run: python3 .github/workflows/scripts/secrets.py "$SECRETS_CONTEXT"
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}

      - name: Push tag to GitHub
        run: bash .github/workflows/scripts/push_tag_to_github.sh ${{ github.event.inputs.release }} ${{ github.event.inputs.commit_sha }}
      - name: Download built docs
        uses: actions/download-artifact@v2
        with:
          name: docs.tar

      - name: Publish docs to pulpproject.org
        run: |
          tar -xvf docs.tar -C ./docs
          .github/workflows/scripts/publish_docs.sh tag ${{ github.event.inputs.release }}
      - name: Deploy plugin to pypi
        run: bash .github/workflows/scripts/publish_plugin_pypi.sh ${{ github.event.inputs.release }}
      - name: Download Python client
        uses: actions/download-artifact@v2
        with:
          name: python-client.tar

      - name: Untar python client packages
        run: tar -xvf python-client.tar

      - name: Publish client to pypi
        run: bash .github/workflows/scripts/publish_client_pypi.sh ${{ github.event.inputs.release }}
      - name: Download Ruby client
        uses: actions/download-artifact@v2
        with:
          name: pulp_ansible_client-${{ github.event.inputs.release }}.gem

      - name: Publish client to rubygems
        run: bash .github/workflows/scripts/publish_client_gem.sh ${{ github.event.inputs.release }}
      - name: Update Redmine
        run: bash .ci/scripts/update_redmine.sh
